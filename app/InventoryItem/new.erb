<div class="row page-title">
  <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
    <a href="<%= url_for :action => :index %>" class="btn btn-default btn-sm pull-left">Cancel</a>
  </div>
  <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8">
    <h3 class="text-center">New Item</h3>
  </div>
  <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
  </div>
</div>

<form method="POST" action="<%= url_for :action => :create %>">
  <input type="hidden" name="id" value="<%= @inventoryItem.object %>"/>

  <div class="form-group">
    <label for="inventoryItem[upc]">UPC</label>
    <% if @hasHardwareScanner %>
        <input type="text" id="inventoryItem[upc]" name="inventoryItem[upc]" class="form-control"/>
    <% else %>
        <div class="input-group">
          <input type="text" id="inventoryItem[upc]" name="inventoryItem[upc]" class="form-control"/>
          <span class="input-group-btn">
            <button type="button" id="takeBarcodeBtn" class="btn btn-default "><span class="glyphicon glyphicon-barcode"></span></button>
          </span>
        </div>
    <% end %>

  </div>

  <div class="form-group">
    <label for="inventoryItem[productName]">Product name</label>
    <input type="text" id="inventoryItem[productName]" name="inventoryItem[productName]" class="form-control"/>
  </div>

  <div class="form-group">
    <label for="inventoryItem[quantity]">Quantity</label>
    <input type="number" id="inventoryItem[quantity]" name="inventoryItem[quantity]" class="form-control"/>
  </div>

  <div class="form-group">
    <label for="inventoryItem[photo]">Photos</label>
    <div id="inventoryItem[photo]" class="row">

      <div id="photo" class="col-lg-4 col-md-4 col-sm-4 col-xs-4 hidden">
        <div class="thumbnail">
          <img src="">
          <input type="hidden" id="inventoryItem[photoUri]" name="inventoryItem[photoUri]" value=""/>
        </div>
      </div>

      <div id="takePhotoBtn" class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
        <div class="thumbnail">
          <img src="/public/images/camera.png">
        </div>
      </div>
    </div>
  </div>

  <div class="form-group">
    <label for="inventoryItem[employeeId]">Employee ID</label>
    <input type="text" id="inventoryItem[employeeId]" name="inventoryItem[employeeId]" class="form-control"/>
  </div>

  <div class="form-group">
    <label for="inventoryItem[signature]">Signature</label>
    <div id="inventoryItem[signature]" class="row">
      <div id="signatureControl" class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
        <button type="button" id="takeSignatureBtn" class="btn btn-default btn-block">Sign it</button>
      </div>

      <div id="signature" class="col-lg-4 col-md-4 col-sm-4 col-xs-4 hidden">
        <div class="thumbnail">
          <img src="/public/images/camera.png">
          <input type="hidden" id="inventoryItem[signatureUri]" name="inventoryItem[signatureUri]" value=""/>
        </div>
      </div>
    </div>
  </div>

  <button type="submit" class="btn btn-success btn-block">Create</button>
</form>

<script>
    var lastScannedCode;
    var qty = 0;

    // Barcode scanner routines

    var barcodeCallback = function (code) {
        if (lastScannedCode === code) {
            qty++;
        } else {
            $("#inventoryItem\\[upc\\]").val(code);
            lastScannedCode = code;
            qty = 1;
        }
        $("#inventoryItem\\[quantity\\]").val(qty);
    };

    var barcodeHardwareScannerCallback = function (params) {
        if (params.data != null) {
            barcodeCallback(params.data);
        }
    };

    var barcodeCameraScannerCallback = function (params) {
        if (params.status === "ok") {
            barcodeCallback(params.barcode);
        }
    };

    var hasHardwareScanner = false;
    var scanners = Rho.Barcode.enumerate();
    var i;
    for (i = 0; i < scanners.length; i++) {
        if (scanners[i].friendlyName === "2D Imager") {
            hasHardwareScanner = true;
            break;
        }
    }

    if (hasHardwareScanner) {
        scanners[i].enable({}, barcodeHardwareScannerCallback)
    } else {
        $("#takeBarcodeBtn").on("click", function () {
            Rho.Barcode.take({}, barcodeCameraScannerCallback)
        });
    }

    // Camera routines
    $("#takePhotoBtn").on("click", function () {
        Rho.Camera.takePicture({}, function (params) {
            if (params.status === "ok") {
                var id = "#photo";
                $(id).removeClass("hidden");
                $(id).find("img").attr("src", params.imageUri);
                $(id).find("input").attr("value", params.imageUri);
                $("#takePhotoBtn").addClass("hidden");
            }
        })
    });

    // Signature routines

    $("#takeSignatureBtn").on("click", function () {
        var signatureFilename = Rho.RhoFile.join(Rho.Application.databaseBlobFolder, new Date().getTime().toString());
        Rho.Signature.takeFullScreen({fileName: signatureFilename}, function (params) {
            if (params.status === "ok") {
                var id = "#signature";
                $(id).removeClass("hidden");
                $(id).find("img").attr("src", params.imageUri.slice(7));
                $(id).find("input").attr("value", params.imageUri.slice(7));
            }
        })
    });
</script>